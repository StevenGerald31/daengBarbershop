<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;700&display=swap"
      rel="stylesheet"
    />

    <!-- Bootstrap -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3"
      crossorigin="anonymous"
    />
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p"
      crossorigin="anonymous"
    ></script>

    <!-- Jquery -->
    <script
      src="https://code.jquery.com/jquery-3.7.1.min.js"
      integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo="
      crossorigin="anonymous"
    ></script>

    <!-- bootstrap icon -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css"
      rel="stylesheet"
    />

    <link rel="stylesheet" href="/stylesheets/cobaAdmin.css" />

    <title id="pageTitle">Dashboard</title>
  </head>
  <body>
    <!-- SIDEBAR MENU -->
    <div class="sidebar">
      <!-- SIDEBAR HEADER -->
      <div class="side-header">
        <div class="image">
          <img src="/image/logoFIX1.png" />
        </div>
        <div class="judul">
          <h2>Halo Admin</h2>
        </div>
      </div>

      <!-- SIDEBAR MENU KONTEN -->
      <div class="side-content">
        <div class="side-menu">
          <ul class="nav flex-column" id="myTab" role="tablist">
            <!-- sidebar dashboard  -->
            <li
              id="Dashboard"
              class="nav-item hover active"
              style="margin-bottom: 10px"
            >
              <div
                class="a nav-link"
                id="Dashboards"
                data-bs-toggle="tab"
                data-bs-target="#Dashboards-pane"
                type="button"
                role="tab"
                aria-controls="Dashboards-pane"
                aria-selected="true"
              >
                <i class="bi bi-house-door"></i>
                <small style="margin-left: 5px">Dashboards</small>
              </div>
            </li>

            <!-- sidebar penjelajahan -->
            <li
              id="DataPelanggan"
              class="nav-item hover"
              style="margin-bottom: 10px"
            >
              <div
                class="a nav-link"
                id="DataPelanggan"
                data-bs-toggle="tab"
                data-bs-target="#DataPelanggan-pane"
                type="button"
                role="tab"
                aria-controls="DataPelanggan-pane"
                aria-selected="false"
              >
                <small style="margin-left: 5px">Data Pelanggan</small>
              </div>
            </li>

            <!-- sidebar Data Server -->
            <li
              id="DataServer"
              class="nav-item hover"
              style="margin-bottom: 10px"
            >
              <div
                class="a nav-link"
                id="DataServer"
                data-bs-toggle="tab"
                data-bs-target="#DataServer-pane"
                type="button"
                role="tab"
                aria-controls="DataServer-pane"
                aria-selected="false"
              >
                <small style="margin-left: 5px">Data Server</small>
              </div>
            </li>

            <!-- sidebar Data Lokasi -->
            <li
              id="DataLokasi"
              class="nav-item hover"
              style="margin-bottom: 10px"
            >
              <div
                class="a nav-link"
                id="DataLokasi"
                data-bs-toggle="tab"
                data-bs-target="#DataLokasi-pane"
                type="button"
                role="tab"
                aria-controls="DataLokasi-pane"
                aria-selected="false"
              >
                <small style="margin-left: 5px">Data Lokasi</small>
              </div>
            </li>

            <!-- sidebar Data Konten -->
            <li
              id="DataKonten"
              class="nav-item hover"
              style="margin-bottom: 10px"
            >
              <div
                class="a nav-link"
                id="DataKonten"
                data-bs-toggle="tab"
                data-bs-target="#DataKonten-pane"
                type="button"
                role="tab"
                aria-controls="DataKonten-pane"
                aria-selected="false"
              >
                <small style="margin-left: 5px">Data Konten</small>
              </div>
            </li>
          </ul>
        </div>
      </div>
    </div>

    <!-- KONTEN DASHBOARD -->
    <div class="main-content tab-content">
      <!-- MAIN KONTEN DASHBOARD -->
      <div
        class="tab-pane fade show active"
        id="Dashboards-pane"
        role="tabpanel"
        aria-labelledby="Dashboards"
        tabindex="0"
      >
        <main class="Dashboard">
          <div class="row-judul">
            <h2 class="fw-bold pt-3">Daeng Barbershop</h2>
            <div class="content-wrap">
              <div class="content">
                <section
                  class="info-boxes d-flex align-items-center justify-content-center"
                >
                  <div class="info-box">
                    <div class="box-icon">
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="24"
                        height="24"
                        viewBox="0 0 24 24"
                      >
                        <path
                          d="M21 20V4a1 1 0 0 0-1-1H4a1 1 0 0 0-1 1v16a1 1 0 0 0 1 1h16a1 1 0 0 0 1-1zm-2-1H5V5h14v14z"
                        />
                        <path
                          d="M10.381 12.309l3.172 1.586a1 1 0 0 0 1.305-.38l3-5-1.715-1.029-2.523 4.206-3.172-1.586a1.002 1.002 0 0 0-1.305.38l-3 5 1.715 1.029 2.523-4.206z"
                        />
                      </svg>
                    </div>
                    <div class="box-content">
                      <span class="big text-center" id="jlhPelanggan"> </span>
                      Pelanggan
                    </div>
                  </div>
                  <div class="info-box">
                    <div class="box-icon">
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="24"
                        height="24"
                        viewBox="0 0 24 24"
                      >
                        <path
                          d="M20 10H4a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h16a1 1 0 0 0 1-1V11a1 1 0 0 0-1-1zm-1 10H5v-8h14v8zM5 6h14v2H5zM7 2h10v2H7z"
                        />
                      </svg>
                    </div>
                    <div class="box-content">
                      <span class="big text-center" id="jlhServer"> </span>
                      Server
                    </div>
                  </div>
                  <!-- <div class="info-box">
                    <div class="box-icon">
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="24"
                        height="24"
                        viewBox="0 0 24 24"
                      >
                        <path
                          d="M3,21c0,0.553,0.448,1,1,1h16c0.553,0,1-0.447,1-1v-1c0-3.714-2.261-6.907-5.478-8.281C16.729,10.709,17.5,9.193,17.5,7.5 C17.5,4.468,15.032,2,12,2C8.967,2,6.5,4.468,6.5,7.5c0,1.693,0.771,3.209,1.978,4.219C5.261,13.093,3,16.287,3,20V21z M8.5,7.5 C8.5,5.57,10.07,4,12,4s3.5,1.57,3.5,3.5S13.93,11,12,11S8.5,9.43,8.5,7.5z M12,13c3.859,0,7,3.141,7,7H5C5,16.141,8.14,13,12,13z"
                        />
                      </svg>
                    </div>
                    <div class="box-content">
                      <span class="big text-center" id="jlhVoucher"> </span>
                      Voucher
                    </div>
                  </div> -->
                  <div class="info-box">
                    <div class="box-icon">
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="24"
                        height="24"
                        viewBox="0 0 24 24"
                      >
                        <path
                          d="M12 3C6.486 3 2 6.364 2 10.5c0 2.742 1.982 5.354 5 6.678V21a.999.999 0 0 0 1.707.707l3.714-3.714C17.74 17.827 22 14.529 22 10.5 22 6.364 17.514 3 12 3zm0 13a.996.996 0 0 0-.707.293L9 18.586V16.5a1 1 0 0 0-.663-.941C5.743 14.629 4 12.596 4 10.5 4 7.468 7.589 5 12 5s8 2.468 8 5.5-3.589 5.5-8 5.5z"
                        />
                      </svg>
                    </div>
                    <div class="box-content">
                      <span class="big text-center" id="jlhCabang"> </span>
                      Cabang
                    </div>
                  </div>
                </section>
              </div>
            </div>
          </div>
        </main>
      </div>
      <!-- MAIN KONTEN DASHBOARD AKHIR -->

      <!-- Pelanggan mulai -->
      <div
        class="tab-pane fade"
        id="DataPelanggan-pane"
        role="tabpanel"
        aria-labelledby="DataPelanggan"
        tabindex="0"
      >
        <main class="Hero">
          <div class="row searchPelanggan d-flex justify-content-center">
            <div class="col-6">
              <input
                type="email"
                class="form-control"
                placeholder="Cari id"
                id="exampleInputEmail1"
                aria-describedby="emailHelp"
              />
            </div>
            <div class="col-4">
              <button class="btn btn-primary">Search</button>
            </div>
          </div>
          <div class="row dataPelanggan">
            <div class="row pt-3">
              <div class="d-flex justify-content-center">
                <h1 class="fw-bold">Data Pelanggan</h1>
              </div>
            </div>
            <div class="row m-3 table-pelanggan">
              <table class="table">
                <thead>
                  <tr>
                    <th scope="col">Nama</th>
                    <th scope="col">No Telp</th>
                    <th scope="col">Jenis Kelamin</th>
                    <th scope="col">Alamat</th>
                    <th scope="col">Point</th>
                  </tr>
                </thead>
                <tbody>
                  <!-- Rows of data will go here -->
                </tbody>
              </table>
            </div>
          </div>
        </main>
      </div>
      <!-- Pelanggan Selesai-->

      <!-- Server mulai -->
      <div
        class="tab-pane fade"
        id="DataServer-pane"
        role="tabpanel"
        aria-labelledby="DataServer"
        tabindex="0"
      >
        <main class="Hero">
          <!-- <div class="row judul">
            <h2 class="fw-bold pt-3">Data Server</h2>
          </div> -->
          <div class="row searchServer d-flex justify-content-center">
            <div class="col-6">
              <input
                type="email"
                class="form-control"
                placeholder="Cari id"
                id="exampleInputEmail1"
                aria-describedby="emailHelp"
              />
            </div>
            <div class="col-4">
              <button class="btn btn-primary">Search</button>
            </div>
          </div>
          <div class="row buttonTambah mt-3">
            <div class="col-2">
              <button
                class="btn btn-primary"
                data-bs-toggle="modal"
                data-bs-target="#addServerModal"
              >
                Tambah Server
              </button>
            </div>
          </div>
          <div class="row dataServer">
            <div class="row pt-3">
              <div class="d-flex justify-content-center">
                <h1 class="fw-bold">Data Server</h1>
              </div>
            </div>
            <div class="row m-3 table-server">
              <table class="table">
                <thead>
                  <tr>
                    <th scope="col">Nama</th>
                    <th scope="col">No Telp</th>
                    <th scope="col">Jenis Kelamin</th>
                    <th scope="col">Alamat</th>
                    <th scope="col">Action</th>
                  </tr>
                </thead>
                <tbody>
                  <!-- Rows of data will go here -->
                </tbody>
              </table>
            </div>
          </div>

          <!-- modal ganti password  -->
          <div
            class="modal fade"
            id="resetPassword"
            tabindex="-1"
            aria-labelledby="resetPasswordLabel"
            aria-hidden="true"
            data-bs-backdrop="false"
          >
            <div class="modal-dialog">
              <div class="modal-content">
                <div class="modal-header">
                  <h1 class="modal-title fs-5" id="resetPasswordLabel">
                    Reset Password
                  </h1>
                  <button
                    type="button"
                    class="btn-close"
                    data-bs-dismiss="modal"
                    aria-label="Close"
                  ></button>
                </div>
                <div class="modal-body">
                  <form id="resetPasswordForm">
                    <div class="mb-3">
                      <label for="password" class="form-label"
                        >Password Baru</label
                      >
                      <input
                        type="text"
                        class="form-control"
                        id="password"
                        name="password"
                        required
                        minlength="8"
                        oninput="checkPassword()"
                      />
                      <div
                        class="password-warning"
                        style="color: red; display: none"
                      >
                        Password must be at least 8 characters long.
                      </div>
                    </div>
                  </form>
                </div>
                <div class="modal-footer">
                  <button
                    type="button"
                    class="btn btn-secondary"
                    data-bs-dismiss="modal"
                  >
                    Close
                  </button>
                  <button
                    type="button"
                    class="btn btn-primary"
                    id="saveNewPassButton"
                  >
                    Save changes
                  </button>
                </div>
              </div>
            </div>
          </div>
          <!-- Reset password Selesai -->

          <!-- Modal Tambah Server-->
          <div
            class="modal fade"
            id="addServerModal"
            tabindex="-1"
            aria-labelledby="addServerModalLabel"
            aria-hidden="true"
            data-bs-backdrop="false"
          >
            <div class="modal-dialog">
              <div class="modal-content">
                <div class="modal-header">
                  <h5 class="modal-title" id="addServerModalLabel">
                    Tambah Server
                  </h5>
                  <button
                    type="button"
                    class="btn-close"
                    data-bs-dismiss="modal"
                    aria-label="Close"
                  ></button>
                </div>
                <div class="modal-body">
                  <form action="" id="tambahServer">
                    <div class="mb-3">
                      <label for="name" class="form-label">Nama</label>
                      <input
                        type="text"
                        class="form-control"
                        id="name"
                        name="name"
                        required
                      />
                    </div>
                    <!-- <div class="mb-3">
                      <label for="password" class="form-label">Password</label>
                      <input
                        type="text"
                        class="form-control"
                        id="password"
                        name="password"
                        required
                        minlength="8"
                      />
                    </div> -->
                    <div class="mb-3">
                      <label for="password" class="form-label">Password</label>
                      <input
                        type="text"
                        class="form-control"
                        id="password"
                        name="password"
                        required
                        minlength="8"
                        oninput="checkPassword()"
                      />
                      <div
                        class="password-warning"
                        style="color: red; display: none"
                      >
                        Password must be at least 8 characters long.
                      </div>
                    </div>
                    <div class="mb-3">
                      <label for="no_telp" class="form-label">Nomor HP</label>
                      <input
                        type="text"
                        class="form-control"
                        id="no_telp"
                        name="no_telp"
                        required
                      />
                    </div>
                    <div class="mb-3">
                      <label for="tanggal_lahir" class="form-label"
                        >Tanggal Lahir</label
                      >
                      <input
                        type="date"
                        class="form-control"
                        id="tanggal_lahir"
                        name="tanggal_lahir"
                        required
                      />
                    </div>
                    <div class="mb-3">
                      <label for="jenis_kelamin" class="form-label"
                        >Jenis Kelamin</label
                      >
                      <select
                        class="form-control"
                        id="jenis_kelamin"
                        name="jenis_kelamin"
                        required
                      >
                        <option value="">Pilih Jenis Kelamin</option>
                        <option value="laki-laki">Laki-laki</option>
                        <option value="perempuan">Perempuan</option>
                      </select>
                    </div>
                    <div class="mb-3">
                      <label for="alamat" class="form-label">Alamat</label>
                      <input
                        type="text"
                        class="form-control"
                        id="alamat"
                        name="alamat"
                        required
                      />
                    </div>
                    <div class="mb-3">
                      <label for="email" class="form-label">Email</label>
                      <input
                        type="email"
                        class="form-control"
                        id="email"
                        name="email"
                        required
                      />
                    </div>

                    <div class="mb-3">
                      <label for="id_lokasi" class="form-label"
                        >Pilih Lokasi</label
                      >
                      <select
                        class="form-control"
                        id="id_lokasi"
                        name="id_lokasi"
                        required
                      >
                        <option value="">Pilih lokasi</option>
                      </select>
                    </div>
                  </form>
                </div>
                <div class="modal-footer">
                  <button
                    type="button"
                    class="btn btn-secondary"
                    data-bs-dismiss="modal"
                  >
                    Close
                  </button>
                  <button
                    type="button"
                    class="btn btn-primary"
                    id="saveNewServer"
                  >
                    Save changes
                  </button>
                </div>
              </div>
            </div>
          </div>
        </main>
      </div>
      <!-- Tambah Server Selesai-->

      <!-- Lokasi mulai -->
      <div
        class="tab-pane fade"
        id="DataLokasi-pane"
        role="tabpanel"
        aria-labelledby="DataLokasi"
        tabindex="0"
      >
        <main class="Hero">
          <div class="row searchLokasi d-flex justify-content-center">
            <div class="col-6">
              <input
                type="email"
                class="form-control"
                placeholder="Cari id"
                id="exampleInputEmail1"
                aria-describedby="emailHelp"
              />
            </div>
            <div class="col-4">
              <button class="btn btn-primary">Search</button>
            </div>
          </div>
          <div class="row dataLokasi">
            <div class="row pt-3">
              <div class="d-flex justify-content-center">
                <h1 class="fw-bold">Data Lokasi</h1>
              </div>
            </div>
            <div class="row buttonTambah mt-3">
              <div class="col-2">
                <button
                  class="btn btn-primary"
                  data-bs-toggle="modal"
                  data-bs-target="#addLokasiModal"
                >
                  Tambah Lokasi
                </button>
              </div>
            </div>
            <div class="row m-3 table-lokasi">
              <table class="table">
                <thead>
                  <tr>
                    <th scope="col">Nama</th>
                    <th scope="col">Alamat</th>
                    <th scope="col">Kota</th>
                    <th scope="col">Kode Post</th>
                    <th scope="col">Action</th>
                  </tr>
                </thead>
                <tbody>
                  <!-- Rows of data will go here -->
                </tbody>
              </table>
            </div>
          </div>

          <!-- Modal Edit Lokasi-->
          <div
            class="modal fade"
            id="editLokasiModal"
            tabindex="-1"
            aria-labelledby="editLokasiModalLabel"
            aria-hidden="true"
            data-bs-backdrop="false"
          >
            <div class="modal-dialog">
              <div class="modal-content">
                <div class="modal-header">
                  <h5 class="modal-title" id="editLokasiModalLabel">
                    Edit Lokasi
                  </h5>
                  <button
                    type="button"
                    class="btn-close"
                    data-bs-dismiss="modal"
                    aria-label="Close"
                  ></button>
                </div>
                <div class="modal-body">
                  <form id="editLokasiForm">
                    <input type="hidden" id="editIdLokasi" />
                    <div class="mb-3">
                      <label for="nama" class="form-label">Nama</label>
                      <input
                        type="text"
                        class="form-control"
                        id="nama"
                        name="nama"
                        required
                      />
                    </div>
                    <div class="mb-3">
                      <label for="alamat" class="form-label">Alamat</label>
                      <input
                        type="text"
                        class="form-control"
                        id="alamat"
                        name="alamat"
                        required
                      />
                    </div>
                    <div class="mb-3">
                      <label for="kota" class="form-label">Kota</label>
                      <input
                        type="text"
                        class="form-control"
                        id="kota"
                        name="kota"
                        required
                      />
                    </div>
                    <div class="mb-3">
                      <label for="kodepos" class="form-label">Kode Pos</label>
                      <input
                        type="text"
                        class="form-control"
                        id="kodepos"
                        name="kodepos"
                        required
                      />
                    </div>
                  </form>
                </div>
                <div class="modal-footer">
                  <button
                    type="button"
                    class="btn btn-secondary"
                    data-bs-dismiss="modal"
                  >
                    Close
                  </button>
                  <button
                    type="button"
                    class="btn btn-primary"
                    id="saveEditLokasi"
                  >
                    Save changes
                  </button>
                </div>
              </div>
            </div>
          </div>

          <!-- Modal Tambah Lokasi-->
          <div
            class="modal fade"
            id="addLokasiModal"
            tabindex="-1"
            aria-labelledby="addLokasiModalLabel"
            aria-hidden="true"
            data-bs-backdrop="false"
          >
            <div class="modal-dialog">
              <div class="modal-content">
                <div class="modal-header">
                  <h5 class="modal-title" id="addLokasiModalLabel">
                    Tambah Lokasi
                  </h5>
                  <button
                    type="button"
                    class="btn-close"
                    data-bs-dismiss="modal"
                    aria-label="Close"
                  ></button>
                </div>
                <div class="modal-body">
                  <form id="tambahLokasi">
                    <div class="mb-3">
                      <label for="nama" class="form-label">Nama</label>
                      <input
                        type="text"
                        class="form-control"
                        id="nama"
                        name="nama"
                        required
                      />
                    </div>
                    <div class="mb-3">
                      <label for="alamat" class="form-label">Alamat</label>
                      <input
                        type="text"
                        class="form-control"
                        id="alamat"
                        name="alamat"
                        required
                      />
                    </div>
                    <div class="mb-3">
                      <label for="kota" class="form-label">Kota</label>
                      <input
                        type="text"
                        class="form-control"
                        id="kota"
                        name="kota"
                        required
                      />
                    </div>
                    <div class="mb-3">
                      <label for="kodepos" class="form-label">Kode Pos</label>
                      <input
                        type="text"
                        class="form-control"
                        id="kodepos"
                        name="kodepos"
                        required
                      />
                    </div>
                  </form>
                </div>
                <div class="modal-footer">
                  <button
                    type="button"
                    class="btn btn-secondary"
                    data-bs-dismiss="modal"
                  >
                    Close
                  </button>
                  <button
                    type="button"
                    class="btn btn-primary"
                    id="saveNewLokasi"
                  >
                    Save changes
                  </button>
                </div>
              </div>
            </div>
          </div>
        </main>
      </div>
      <!-- Lokasi Selesai-->

      <!-- konten start -->
      <div
        class="tab-pane fade"
        id="DataKonten-pane"
        role="tabpanel"
        aria-labelledby="DataKonten"
        tabindex="=0"
      >
        <main class="Hero">
          <div class="row judul">
            <h2 class="fw-bold pt-3">Data Konten</h2>
          </div>
          <div
            class="col-12 buttonAction d-flex justify-content-start align-items-center mt-3 mb-3"
          >
            <div class="buttonTambahKonten me-2">
              <button
                class="btn btn-success"
                data-bs-toggle="modal"
                data-bs-target="#addKontenModal"
              >
                <i class="bi bi-plus me-2"></i>
                Tambah Konten
              </button>
            </div>
            <div class="buttonHapusKontenExp">
              <button
                class="btn btn-danger"
                onclick="confirmDeleteExpiredContents()"
              >
                <i class="bi bi-trash me-2"></i>
                Hapus Konten Expired
              </button>
            </div>
          </div>

          <div
            class="card-konten-container d-flex flex-wrap justify-content-around"
            style="
              display: flex;
              flex-wrap: wrap;
              justify-content: space-around;
            "
          ></div>
        </main>

        <!-- modal tambah content -->
        <div
          class="modal fade"
          id="addKontenModal"
          tabindex="-1"
          aria-labelledby="addKontenModalLabel"
          aria-hidden="true"
          data-bs-backdrop="false"
        >
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="addKontenModalLabel">
                  Tambah Konten
                </h5>
                <button
                  type="button"
                  class="btn-close"
                  data-bs-dismiss="modal"
                  aria-label="Close"
                ></button>
              </div>
              <div class="modal-body">
                <form id="tambahKonten">
                  <div class="mb-3">
                    <label for="title" class="form-label">Judul</label>
                    <input
                      type="text"
                      class="form-control"
                      id="title"
                      name="title"
                      required
                    />
                  </div>
                  <div class="mb-3">
                    <label for="image_path" class="form-label"
                      >Upload Gambar</label
                    >
                    <input
                      type="file"
                      class="form-control"
                      id="image_path"
                      name="image_path"
                      accept="image/*"
                      required
                    />
                  </div>
                  <div class="mb-3">
                    <label for="description" class="form-label"
                      >Deskripsi</label
                    >
                    <textarea
                      class="form-control"
                      id="description"
                      name="description"
                      rows="3"
                      required
                    ></textarea>
                  </div>

                  <div class="mb-3">
                    <label for="expiry_date" class="form-label"
                      >Tanggal Expired</label
                    >
                    <input
                      type="date"
                      class="form-control"
                      id="expiry_date"
                      name="expiry_date"
                      required
                    />
                  </div>
                </form>
              </div>
              <div class="modal-footer">
                <button
                  type="button"
                  class="btn btn-secondary"
                  data-bs-dismiss="modal"
                >
                  Close
                </button>
                <button
                  type="button"
                  class="btn btn-primary"
                  id="saveNewKonten"
                >
                  Save changes
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <script>
      // jlh pelanggan
      fetch("http://localhost:3000/admin/pelanggan", {
        method: "GET",
      })
        .then((response) => response.json())
        .then((data) => {
          console.log("Jlh Pelanggan: ", data.length);

          $("#jlhPelanggan").html(data.length);
        });

      // jlh server
      fetch("http://localhost:3000/admin/server", {
        method: "GET",
      })
        .then((response) => response.json())
        .then((data) => {
          console.log("Jlh Server: ", data.length);

          $("#jlhServer").html(data.length);
        });

      // jlh cabang
      fetch("http://localhost:3000/admin/lokasi", {
        method: "GET",
      })
        .then((response) => response.json())
        .then((data) => {
          console.log("Jlh Cabang: ", data);

          $("#jlhCabang").html(data.length);
        });

      // Data Pelanggan
      fetch("http://localhost:3000/admin/pelanggan", {
        method: "GET",
      })
        .then((response) => response.json())
        .then((data) => {
          console.log("Data Pelanggan: ", data);

          const tableBody = document.querySelector(".table-pelanggan tbody");
          tableBody.innerHTML = ""; // clear existing rows

          data.forEach((item) => {
            point = item.point;
            if (point == null) {
              point = 0;
            }

            const row = `
              <tr>
                <td>${item.name}</td>
                <td>${item.no_telp}</td>
                <td>${item.jenis_kelamin}</td>
                <td>${item.alamat}</td>
                <td>${point}</td>

              </tr>
            `;

            tableBody.innerHTML += row;
          });
        });

      // Data Server

      function loadServer() {
        fetch("http://localhost:3000/admin/server", {
          method: "GET",
        })
          .then((response) => response.json())
          .then((data) => {
            console.log("Data server: ", data);

            const tableBody = document.querySelector(".table-server tbody");
            tableBody.innerHTML = ""; // clear existing rows

            data.forEach((item) => {
              const row = `
              <tr>
                <td>${item.name}</td>
                <td>${item.no_telp}</td>
                <td>${item.jenis_kelamin}</td>
                <td>${item.alamat}</td>
                <td>
                 <button type="button" class="btn btn-success m-1" data-bs-toggle="modal" data-bs-target="#resetPassword" data-id-user="${item.id_user}"">
                        <i class="bi bi bi-pencil" ></i>
                      </button>

                </td>
              </tr>
            `;

              tableBody.innerHTML += row;
            });
          });
      }

      loadServer();

      // pilihan lokasi:
      fetch("http://localhost:3000/admin/lokasi", {
        method: "GET",
      })
        .then((response) => response.json())
        .then((data) => {
          console.log("lokasi: ", data);

          // Get the select element
          const lokasiSelect = document.getElementById("id_lokasi");

          data.forEach((lokasi) => {
            const option = document.createElement("option");
            option.value = lokasi.id_lokasi;
            option.textContent = lokasi.nama;
            lokasiSelect.appendChild(option);
          });
        })
        .catch((error) => {
          console.error("Error fetching lokasi data:", error);
        });

      // script tambah server
      document.getElementById("saveNewServer").addEventListener("click", () => {
        const form = document.getElementById("tambahServer");
        const formData = new FormData(form);
        const data = Object.fromEntries(formData.entries());

        fetch("http://localhost:3000/admin/tambahServer", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(data),
        })
          .then((response) => {
            if (!response.ok) {
              return response.json().then((error) => {
                throw error;
              });
            }
            return response.json();
          })
          .then((result) => {
            console.log("Success:", result);
            // Handle the successful response here
            alert("Data berhasil ditambahkan");

            // Menutup modal setelah sukses
            const modalElement = document.getElementById("addServerModal");
            const modalInstance = bootstrap.Modal.getInstance(modalElement);
            modalInstance.hide();

            // Initial load
            loadServer();
          })
          .catch((error) => {
            console.error("Error adding new server:", error);
            alert("Error adding new server");
          });
      });

      function checkPassword() {
        const passwordInput = document.getElementById("password");
        const warningMessage = document.querySelector(".password-warning");

        if (passwordInput.value.length < 8) {
          warningMessage.style.display = "block";
        } else {
          warningMessage.style.display = "none";
        }
      }

      // script reset password
      // // Ambil elemen modal dan form
      // const resetPasswordModal = document.getElementById("resetPassword");
      // const resetPasswordForm = document.getElementById("resetPasswordForm");

      // const saveNewPassButton = document.getElementById("saveNewPassButton");

      // // Event listener untuk tombol simpan password baru
      // saveNewPassButton.addEventListener("click", async () => {
      //   const passwordInput = document.getElementById("password");
      //   const newPassword = passwordInput.value;
      //   const selectedUserId = resetPasswordForm.getAttribute("data-id-user");

      //   console.log("Password baru: ", newPassword); // Debugging
      //   console.log("ID Pengguna: ", selectedUserId); // Debugging

      //   if (!selectedUserId || !newPassword) {
      //     alert("Please select a user and enter a new password.");
      //     return;
      //   }

      //   try {
      //     const response = await fetch(
      //       "http://localhost:3000/admin/resetPassword",
      //       {
      //         method: "POST",
      //         headers: {
      //           "Content-Type": "application/json",
      //         },
      //         body: JSON.stringify({
      //           newPassword,
      //           id_user: selectedUserId,
      //         }),
      //       }
      //     );

      //     if (!response.ok) {
      //       const error = await response.json();
      //       throw new Error(error.message);
      //     }

      //     const result = await response.json();
      //     console.log("Password updated:", result);
      //     alert("Password updated successfully");

      //     // Tutup modal
      //     const modalInstance = bootstrap.Modal.getInstance(resetPasswordModal);
      //     modalInstance.hide();

      //     // Opsional: Refresh data pengguna jika perlu
      //     // loadUsers(); // Pastikan loadUsers adalah fungsi yang memuat ulang daftar pengguna
      //   } catch (error) {
      //     console.error("Error updating password:", error);
      //     alert("Failed to update password");
      //   }
      // });

      // Script for Reset Password
      document.addEventListener("DOMContentLoaded", () => {
        const resetPasswordModal = document.getElementById("resetPassword");
        const resetPasswordForm = document.getElementById("resetPasswordForm");

        // Listen for the event when the modal is shown
        resetPasswordModal.addEventListener("show.bs.modal", (event) => {
          // Button that triggered the modal
          const button = event.relatedTarget;
          // Extract info from data-* attributes
          const userId = button.getAttribute("data-id-user");
          // Update the form's data-id-user attribute
          resetPasswordForm.setAttribute("data-id-user", userId);
        });

        const saveNewPassButton = document.getElementById("saveNewPassButton");

        saveNewPassButton.addEventListener("click", async () => {
          const passwordInput = document.getElementById("password");
          const newPassword = passwordInput.value;
          const selectedUserId = resetPasswordForm.getAttribute("data-id-user");

          if (!selectedUserId || !newPassword) {
            alert("Please select a user and enter a new password.");
            return;
          }

          try {
            const response = await fetch(
              "http://localhost:3000/admin/resetPassword",
              {
                method: "POST",
                headers: {
                  "Content-Type": "application/json",
                },
                body: JSON.stringify({
                  newPassword,
                  id_user: selectedUserId,
                }),
              }
            );

            if (!response.ok) {
              const error = await response.json();
              throw new Error(error.message);
            }

            const result = await response.json();
            console.log("Password updated:", result);
            alert("Password updated successfully");

            const modalInstance =
              bootstrap.Modal.getInstance(resetPasswordModal);
            modalInstance.hide();
          } catch (error) {
            console.error("Error updating password:", error);
            alert("Failed to update password");
          }
        });
      });

      //Script Load Lokasi
      document.addEventListener("DOMContentLoaded", function () {
        loadLokasi(); // Load lokasi data when the page loads

        // Fetch data from the server and populate the table
        function loadLokasi() {
          fetch("http://localhost:3000/admin/lokasi")
            .then((response) => response.json())
            .then((data) => {
              const lokasiTableBody = document.querySelector(
                ".table-lokasi tbody"
              );
              lokasiTableBody.innerHTML = ""; // Clear the table body

              data.forEach((lokasi) => {
                const row = document.createElement("tr");

                row.innerHTML = `
          <td>${lokasi.nama}</td>
          <td>${lokasi.alamat}</td>
          <td>${lokasi.kota}</td>
          <td>${lokasi.kodepos}</td>
          <td>
            <button class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#editLokasiModal" data-id-lokasi="${lokasi.id_lokasi}">Edit</button>
            <button class="btn btn-danger" onclick="deleteLokasi(${lokasi.id_lokasi})">Delete</button>
          </td>
        `;

                lokasiTableBody.appendChild(row);
              });

              // Add event listeners for each edit button after the table is populated
              document
                .querySelectorAll('[data-bs-toggle="modal"]')
                .forEach((button) => {
                  button.addEventListener("click", function () {
                    const selectedLokasiId =
                      this.getAttribute("data-id-lokasi");
                    loadLokasiDetails(selectedLokasiId);
                  });
                });
            })
            .catch((error) => {
              console.error("Error loading lokasi data:", error);
            });
        }

        // Function to tambah  lokasi
        document
          .getElementById("saveNewLokasi")
          .addEventListener("click", () => {
            const form = document.getElementById("tambahLokasi");
            const formData = new FormData(form);
            const data = Object.fromEntries(formData.entries());

            fetch("http://localhost:3000/admin/tambahLokasi", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify(data),
            })
              .then((response) => {
                if (!response.ok) {
                  return response.json().then((error) => {
                    throw error;
                  });
                }
                return response.json();
              })
              .then((result) => {
                console.log("Success:", result);
                // Handle the successful response here
                alert("Data berhasil ditambahkan");

                // Menutup modal setelah sukses
                const modalElement = document.getElementById("addLokasiModal");
                const modalInstance = bootstrap.Modal.getInstance(modalElement);
                modalInstance.hide();

                // Initial load
                loadLokasi();
              })
              .catch((error) => {
                console.error("Error:", error);
                // Handle the error response here
              });
          });

        // Function to delete a lokasi
        window.deleteLokasi = function (id_lokasi) {
          if (confirm("Apakah Anda yakin ingin menghapus lokasi ini?")) {
            fetch(`http://localhost:3000/admin/deleteLokasi/${id_lokasi}`, {
              method: "DELETE",
            })
              .then((response) => {
                if (!response.ok) {
                  throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
              })
              .then((data) => {
                alert("Lokasi berhasil dihapus!");
                loadLokasi(); // Reload lokasi data after deletion
              })
              .catch((error) => {
                console.error("Error deleting lokasi:", error);
              });
          }
        };

        //
        function loadLokasiDetails(id) {
          document
            .getElementById("saveEditLokasi")
            .addEventListener("click", () => {
              const form = document.getElementById("editLokasiForm");
              const formData = new FormData(form);
              const data = Object.fromEntries(formData.entries());

              const selectedLokasi = form.getAttribute("data-id-lokasi");

              fetch(`http://localhost:8000/api/lokasis/${id}`, {
                method: "PUT",
                headers: {
                  "Content-Type": "application/json",
                },
                body: JSON.stringify(data),
              })
                .then((response) => {
                  if (!response.ok) {
                    return response.json().then((error) => {
                      throw error;
                    });
                  }
                  return response.json();
                })
                .then((result) => {
                  console.log("Success:", result);
                  alert("Lokasi Berhasil di Edit");

                  // Close the modal after success
                  const modalElement =
                    document.getElementById("editLokasiModal");
                  const modalInstance =
                    bootstrap.Modal.getInstance(modalElement);
                  modalInstance.hide();

                  // Reload the lokasi data
                  loadLokasi();
                })
                .catch((error) => {
                  console.error("Error:", error);
                  alert("Terjadi kesalahan saat mengedit lokasi.");
                });
            });
        }

        // Function to edit a lokasi
        // document
        //   .getElementById("saveEditLokasi")
        //   .addEventListener("click", () => {
        //     const form = document.getElementById("editLokasiForm");
        //     const formData = new FormData(form);
        //     const data = Object.fromEntries(formData.entries());

        //     const selectedLokasi = form.getAttribute("data-id-lokasi");

        //     fetch(`http://localhost:3000/admin/editLokasi/${selectedLokasi}`, {
        //       method: "PUT",
        //       headers: {
        //         "Content-Type": "application/json",
        //       },
        //       body: JSON.stringify(data),
        //     })
        //       .then((response) => {
        //         if (!response.ok) {
        //           return response.json().then((error) => {
        //             throw error;
        //           });
        //         }
        //         return response.json();
        //       })
        //       .then((result) => {
        //         console.log("Success:", result);
        //         alert("Lokasi Berhasil di Edit");

        //         // Close the modal after success
        //         const modalElement = document.getElementById("editLokasiModal");
        //         const modalInstance = bootstrap.Modal.getInstance(modalElement);
        //         modalInstance.hide();

        //         // Reload the lokasi data
        //         loadLokasi();
        //       })
        //       .catch((error) => {
        //         console.error("Error:", error);
        //         alert("Terjadi kesalahan saat mengedit lokasi.");
        //       });
        //   });
      });

      // Script for Konten

      function loadKonten() {
        fetch("http://localhost:3000/admin/konten", {
          method: "GET",
        })
          .then((response) => response.json())
          .then((responseData) => {
            console.log("Data konten: ", responseData);

            const kontenContainer = document.querySelector(
              ".card-konten-container"
            );
            kontenContainer.innerHTML = ""; // Clear existing rows

            // Access the array in responseData.data
            const kontenArray = responseData.data;

            // Create a card for each konten item
            kontenArray.forEach((item) => {
              const card = document.createElement("div");
              card.className = "card col-3 m-2";
              card.innerHTML = `
              <div class="card-img d-flex justify-content-center align-items-center m-1">
            <img
              src="${item.image_path}" // Menampilkan gambar dari database
              class="card-img-top"
              alt="${item.title}" // Menambahkan alt text dengan judul konten
            />
          </div>
            <div class="card-body">
              <h5 class="card-title">${item.title}</h5>
              <p class="card-text">
                ${item.description}
              </p>
              <button class="btn btn-danger" onclick="deleteKonten(${item.id})">
                Hapus Konten
              </button>
            </div>
            <div class="card-footer">
              <small class="text-muted">Expires on: ${item.expiry_date}</small>
            </div>
          `;

              kontenContainer.appendChild(card);
            });
          })
          .catch((error) => console.error("Error:", error));
      }

      function deleteKonten(id) {
        if (confirm("Yakin ingin menghapus konten ini?")) {
          fetch(`http://localhost:3000/admin/deleteContent/${id}`, {
            method: "DELETE",
          })
            .then((response) => {
              if (!response.ok) {
                return response.json().then((error) => {
                  throw error;
                });
              }
              return response.json();
            })
            .then((result) => {
              console.log("Content deleted:", result);
              alert("Konten berhasil dihapus");
              loadKonten(); // Reload the content
            })
            .catch((error) => {
              console.error("Error deleting content:", error.message || error);
              alert("Error deleting content: " + (error.message || error));
            });
        }
      }

      function confirmDeleteExpiredContents() {
        if (confirm("Yakin ingin menghapus semua konten yang telah expired?")) {
          deleteExpiredContents();
        }
      }

      function deleteExpiredContents() {
        fetch("http://localhost:3000/admin/deleteExpiredContent", {
          method: "DELETE",
        })
          .then((response) => {
            if (!response.ok) {
              return response.json().then((error) => {
                throw error;
              });
            }
            return response.json();
          })
          .then((result) => {
            console.log("Expired contents deleted:", result);
            alert("Konten yang telah expired berhasil dihapus");
            loadKonten(); // Reload the content
          })
          .catch((error) => {
            console.error(
              "Error deleting expired contents:",
              error.message || error
            );
            alert(
              "Error deleting expired contents: " + (error.message || error)
            );
          });
      }

      // Initial load
      loadKonten();

      // script save new content
      document.addEventListener("DOMContentLoaded", () => {
        const form = document.getElementById("tambahKonten");
        const saveButton = document.getElementById("saveNewKonten");

        saveButton.addEventListener("click", async () => {
          const formData = new FormData(form); // Use FormData to handle the form with file uploads

          try {
            const response = await fetch(
              "http://localhost:3000/admin/tambahKonten",
              {
                method: "POST",
                body: formData, // Directly pass the FormData object
              }
            );

            if (!response.ok) {
              const errorData = await response.json();
              throw new Error(errorData.message || "Error adding new content");
            }

            const data = await response.json();
            alert("Content added successfully");
            console.log(data);

            // Optionally, clear the form and close the modal
            form.reset();
            $("#addKontenModal").modal("hide"); // Bootstrap modal close
          } catch (error) {
            alert(`Error adding new content: ${error.message}`);
            console.error(error);
          }
        });
      });
    </script>
  </body>
</html>
